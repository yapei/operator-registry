---
defaultChannel: stable
name: flux-operator
schema: olm.package
---
image: quay.io/openshifttest/flux-operator-bundle:latest
name: flux.v0.16.1
package: flux-operator
properties:
- type: olm.gvk
  value:
    group: helm.toolkit.fluxcd.io
    kind: HelmRelease
    version: v2beta1
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImagePolicy
    version: v1alpha1
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImagePolicy
    version: v1alpha2
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImagePolicy
    version: v1beta1
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImageRepository
    version: v1alpha1
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImageRepository
    version: v1alpha2
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImageRepository
    version: v1beta1
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImageUpdateAutomation
    version: v1alpha1
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImageUpdateAutomation
    version: v1alpha2
- type: olm.gvk
  value:
    group: image.toolkit.fluxcd.io
    kind: ImageUpdateAutomation
    version: v1beta1
- type: olm.gvk
  value:
    group: kustomize.toolkit.fluxcd.io
    kind: Kustomization
    version: v1beta1
- type: olm.gvk
  value:
    group: notification.toolkit.fluxcd.io
    kind: Alert
    version: v1beta1
- type: olm.gvk
  value:
    group: notification.toolkit.fluxcd.io
    kind: Provider
    version: v1beta1
- type: olm.gvk
  value:
    group: notification.toolkit.fluxcd.io
    kind: Receiver
    version: v1beta1
- type: olm.gvk
  value:
    group: source.toolkit.fluxcd.io
    kind: Bucket
    version: v1beta1
- type: olm.gvk
  value:
    group: source.toolkit.fluxcd.io
    kind: GitRepository
    version: v1beta1
- type: olm.gvk
  value:
    group: source.toolkit.fluxcd.io
    kind: HelmChart
    version: v1beta1
- type: olm.gvk
  value:
    group: source.toolkit.fluxcd.io
    kind: HelmRepository
    version: v1beta1
- type: olm.package
  value:
    packageName: flux-operator
    version: 0.16.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoiY2x1c3Rlci1yZWNvbmNpbGVyLWZsdXgtc3lzdGVtIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImNsdXN0ZXItYWRtaW4ifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJrdXN0b21pemUtY29udHJvbGxlciIsIm5hbWVzcGFjZSI6ImZsdXgtc3lzdGVtIn0seyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiaGVsbS1jb250cm9sbGVyIiwibmFtZXNwYWNlIjoiZmx1eC1zeXN0ZW0ifV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6ImZsdXgtc3lzdGVtIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImZsdXgiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4xNi4xIn0sIm5hbWUiOiJjcmQtY29udHJvbGxlci1mbHV4LXN5c3RlbSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbInNvdXJjZS50b29sa2l0LmZsdXhjZC5pbyJdLCJyZXNvdXJjZXMiOlsiKiJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImt1c3RvbWl6ZS50b29sa2l0LmZsdXhjZC5pbyJdLCJyZXNvdXJjZXMiOlsiKiJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImhlbG0udG9vbGtpdC5mbHV4Y2QuaW8iXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJub3RpZmljYXRpb24udG9vbGtpdC5mbHV4Y2QuaW8iXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJpbWFnZS50b29sa2l0LmZsdXhjZC5pbyJdLCJyZXNvdXJjZXMiOlsiKiJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwiY29uZmlnbWFwcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoiY3JkLWNvbnRyb2xsZXItZmx1eC1zeXN0ZW0ifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoiY3JkLWNvbnRyb2xsZXItZmx1eC1zeXN0ZW0ifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJrdXN0b21pemUtY29udHJvbGxlciIsIm5hbWVzcGFjZSI6ImZsdXgtc3lzdGVtIn0seyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiaGVsbS1jb250cm9sbGVyIiwibmFtZXNwYWNlIjoiZmx1eC1zeXN0ZW0ifSx7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzb3VyY2UtY29udHJvbGxlciIsIm5hbWVzcGFjZSI6ImZsdXgtc3lzdGVtIn0seyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoibm90aWZpY2F0aW9uLWNvbnRyb2xsZXIiLCJuYW1lc3BhY2UiOiJmbHV4LXN5c3RlbSJ9LHsia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6ImltYWdlLXJlZmxlY3Rvci1jb250cm9sbGVyIiwibmFtZXNwYWNlIjoiZmx1eC1zeXN0ZW0ifSx7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJpbWFnZS1hdXRvbWF0aW9uLWNvbnRyb2xsZXIiLCJuYW1lc3BhY2UiOiJmbHV4LXN5c3RlbSJ9XX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoiaGVsbS1jb250cm9sbGVyIn19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoiaW1hZ2UtYXV0b21hdGlvbi1jb250cm9sbGVyIn19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoiaW1hZ2UtcmVmbGVjdG9yLWNvbnRyb2xsZXIifX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjUuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiZmx1eC1zeXN0ZW0iLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoiZmx1eCIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjE2LjEifSwibmFtZSI6ImltYWdldXBkYXRlYXV0b21hdGlvbnMuaW1hZ2UudG9vbGtpdC5mbHV4Y2QuaW8ifSwic3BlYyI6eyJncm91cCI6ImltYWdlLnRvb2xraXQuZmx1eGNkLmlvIiwibmFtZXMiOnsia2luZCI6IkltYWdlVXBkYXRlQXV0b21hdGlvbiIsImxpc3RLaW5kIjoiSW1hZ2VVcGRhdGVBdXRvbWF0aW9uTGlzdCIsInBsdXJhbCI6ImltYWdldXBkYXRlYXV0b21hdGlvbnMiLCJzaW5ndWxhciI6ImltYWdldXBkYXRlYXV0b21hdGlvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMubGFzdEF1dG9tYXRpb25SdW5UaW1lIiwibmFtZSI6Ikxhc3QgcnVuIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkltYWdlVXBkYXRlQXV0b21hdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaW1hZ2V1cGRhdGVhdXRvbWF0aW9ucyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkltYWdlVXBkYXRlQXV0b21hdGlvblNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBJbWFnZVVwZGF0ZUF1dG9tYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImNoZWNrb3V0Ijp7ImRlc2NyaXB0aW9uIjoiQ2hlY2tvdXQgZ2l2ZXMgdGhlIHBhcmFtZXRlcnMgZm9yIGNsb25pbmcgdGhlIGdpdCByZXBvc2l0b3J5LCByZWFkeSB0byBtYWtlIGNoYW5nZXMuIiwicHJvcGVydGllcyI6eyJicmFuY2giOnsiZGVzY3JpcHRpb24iOiJCcmFuY2ggZ2l2ZXMgdGhlIGJyYW5jaCB0byBjbG9uZSBmcm9tIHRoZSBnaXQgcmVwb3NpdG9yeS4gSWYgYC5zcGVjLnB1c2hgIGlzIG5vdCBzdXBwbGllZCwgY29tbWl0cyB3aWxsIGFsc28gYmUgcHVzaGVkIHRvIHRoaXMgYnJhbmNoLiIsInR5cGUiOiJzdHJpbmcifSwiZ2l0UmVwb3NpdG9yeVJlZiI6eyJkZXNjcmlwdGlvbiI6IkdpdFJlcG9zaXRvcnlSZWYgcmVmZXJzIHRvIHRoZSByZXNvdXJjZSBnaXZpbmcgYWNjZXNzIGRldGFpbHMgdG8gYSBnaXQgcmVwb3NpdG9yeSB0byB1cGRhdGUgZmlsZXMgaW4uIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImJyYW5jaCIsImdpdFJlcG9zaXRvcnlSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJjb21taXQiOnsiZGVzY3JpcHRpb24iOiJDb21taXQgc3BlY2lmaWVzIGhvdyB0byBjb21taXQgdG8gdGhlIGdpdCByZXBvc2l0b3J5LiIsInByb3BlcnRpZXMiOnsiYXV0aG9yRW1haWwiOnsiZGVzY3JpcHRpb24iOiJBdXRob3JFbWFpbCBnaXZlcyB0aGUgZW1haWwgdG8gcHJvdmlkZSB3aGVuIG1ha2luZyBhIGNvbW1pdCIsInR5cGUiOiJzdHJpbmcifSwiYXV0aG9yTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkF1dGhvck5hbWUgZ2l2ZXMgdGhlIG5hbWUgdG8gcHJvdmlkZSB3aGVuIG1ha2luZyBhIGNvbW1pdCIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZVRlbXBsYXRlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZVRlbXBsYXRlIHByb3ZpZGVzIGEgdGVtcGxhdGUgZm9yIHRoZSBjb21taXQgbWVzc2FnZSwgaW50byB3aGljaCB3aWxsIGJlIGludGVycG9sYXRlZCB0aGUgZGV0YWlscyBvZiB0aGUgY2hhbmdlIG1hZGUuIiwidHlwZSI6InN0cmluZyJ9LCJzaWduaW5nS2V5Ijp7ImRlc2NyaXB0aW9uIjoiU2lnbmluZ0tleSBwcm92aWRlcyB0aGUgb3B0aW9uIHRvIHNpZ24gY29tbWl0cyB3aXRoIGEgR1BHIGtleSIsInByb3BlcnRpZXMiOnsic2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VjcmV0UmVmIGhvbGRzIHRoZSBuYW1lIHRvIGEgc2VjcmV0IHRoYXQgY29udGFpbnMgYSAnZ2l0LmFzYycga2V5IGNvcnJlc3BvbmRpbmcgdG8gdGhlIEFTQ0lJIEFybW9yZWQgZmlsZSBjb250YWluaW5nIHRoZSBHUEcgc2lnbmluZyBrZXlwYWlyIGFzIHRoZSB2YWx1ZS4gSXQgbXVzdCBiZSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIEltYWdlVXBkYXRlQXV0b21hdGlvbi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiYXV0aG9yRW1haWwiLCJhdXRob3JOYW1lIl0sInR5cGUiOiJvYmplY3QifSwiaW50ZXJ2YWwiOnsiZGVzY3JpcHRpb24iOiJJbnRlcnZhbCBnaXZlcyBhbiBsb3dlciBib3VuZCBmb3IgaG93IG9mdGVuIHRoZSBhdXRvbWF0aW9uIHJ1biBzaG91bGQgYmUgYXR0ZW1wdGVkLiIsInR5cGUiOiJzdHJpbmcifSwicHVzaCI6eyJkZXNjcmlwdGlvbiI6IlB1c2ggc3BlY2lmaWVzIGhvdyBhbmQgd2hlcmUgdG8gcHVzaCBjb21taXRzIG1hZGUgYnkgdGhlIGF1dG9tYXRpb24uIElmIG1pc3NpbmcsIGNvbW1pdHMgYXJlIHB1c2hlZCAoYmFjaykgdG8gYC5zcGVjLmNoZWNrb3V0LmJyYW5jaGAuIiwicHJvcGVydGllcyI6eyJicmFuY2giOnsiZGVzY3JpcHRpb24iOiJCcmFuY2ggc3BlY2lmaWVzIHRoYXQgY29tbWl0cyBzaG91bGQgYmUgcHVzaGVkIHRvIHRoZSBicmFuY2ggbmFtZWQuIFRoZSBicmFuY2ggaXMgY3JlYXRlZCB1c2luZyBgLnNwZWMuY2hlY2tvdXQuYnJhbmNoYCBhcyB0aGUgc3RhcnRpbmcgcG9pbnQsIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJicmFuY2giXSwidHlwZSI6Im9iamVjdCJ9LCJzdXNwZW5kIjp7ImRlc2NyaXB0aW9uIjoiU3VzcGVuZCB0ZWxscyB0aGUgY29udHJvbGxlciB0byBub3QgcnVuIHRoaXMgYXV0b21hdGlvbiwgdW50aWwgaXQgaXMgdW5zZXQgKG9yIHNldCB0byBmYWxzZSkuIERlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sInVwZGF0ZSI6eyJkZWZhdWx0Ijp7InN0cmF0ZWd5IjoiU2V0dGVycyJ9LCJkZXNjcmlwdGlvbiI6IlVwZGF0ZSBnaXZlcyB0aGUgc3BlY2lmaWNhdGlvbiBmb3IgaG93IHRvIHVwZGF0ZSB0aGUgZmlsZXMgaW4gdGhlIHJlcG9zaXRvcnkuIFRoaXMgY2FuIGJlIGxlZnQgZW1wdHksIHRvIHVzZSB0aGUgZGVmYXVsdCB2YWx1ZS4iLCJwcm9wZXJ0aWVzIjp7InBhdGgiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHRvIHRoZSBkaXJlY3RvcnkgY29udGFpbmluZyB0aGUgbWFuaWZlc3RzIHRvIGJlIHVwZGF0ZWQuIERlZmF1bHRzIHRvICdOb25lJywgd2hpY2ggdHJhbnNsYXRlcyB0byB0aGUgcm9vdCBwYXRoIG9mIHRoZSBHaXRSZXBvc2l0b3J5UmVmLiIsInR5cGUiOiJzdHJpbmcifSwic3RyYXRlZ3kiOnsiZGVmYXVsdCI6IlNldHRlcnMiLCJkZXNjcmlwdGlvbiI6IlN0cmF0ZWd5IG5hbWVzIHRoZSBzdHJhdGVneSB0byBiZSB1c2VkLiIsImVudW0iOlsiU2V0dGVycyJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdHJhdGVneSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJjaGVja291dCIsImNvbW1pdCIsImludGVydmFsIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2VVcGRhdGVBdXRvbWF0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEltYWdlVXBkYXRlQXV0b21hdGlvbiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiAtLS0gVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsIHR5cGUgRm9vU3RhdHVzIHN0cnVjdHsgICAgIC8vIFJlcHJlc2VudHMgdGhlIG9ic2VydmF0aW9ucyBvZiBhIGZvbydzIGN1cnJlbnQgc3RhdGUuICAgICAvLyBLbm93biAuc3RhdHVzLmNvbmRpdGlvbnMudHlwZSBhcmU6IFwiQXZhaWxhYmxlXCIsIFwiUHJvZ3Jlc3NpbmdcIiwgYW5kIFwiRGVncmFkZWRcIiAgICAgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZSAgICAgLy8gK3BhdGNoU3RyYXRlZ3k9bWVyZ2UgICAgIC8vICtsaXN0VHlwZT1tYXAgICAgIC8vICtsaXN0TWFwS2V5PXR5cGUgICAgIENvbmRpdGlvbnMgW11tZXRhdjEuQ29uZGl0aW9uIGBqc29uOlwiY29uZGl0aW9ucyxvbWl0ZW1wdHlcIiBwYXRjaFN0cmF0ZWd5OlwibWVyZ2VcIiBwYXRjaE1lcmdlS2V5OlwidHlwZVwiIHByb3RvYnVmOlwiYnl0ZXMsMSxyZXAsbmFtZT1jb25kaXRpb25zXCJgIFxuICAgICAvLyBvdGhlciBmaWVsZHMgfSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIFRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi4gVGhpcyBtYXkgYmUgYW4gZW1wdHkgc3RyaW5nLiIsIm1heExlbmd0aCI6MzI3NjgsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRHZW5lcmF0aW9uIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXMgc2V0IGJhc2VkIHVwb24uIEZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiBQcm9kdWNlcnMgb2Ygc3BlY2lmaWMgY29uZGl0aW9uIHR5cGVzIG1heSBkZWZpbmUgZXhwZWN0ZWQgdmFsdWVzIGFuZCBtZWFuaW5ncyBmb3IgdGhpcyBmaWVsZCwgYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLiBUaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy4gVGhpcyBmaWVsZCBtYXkgbm90IGJlIGVtcHR5LiIsIm1heExlbmd0aCI6MTAyNCwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXltBLVphLXpdKFtBLVphLXowLTlfLDpdKltBLVphLXowLTlfXSk/JCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJlbnVtIjpbIlRydWUiLCJGYWxzZSIsIlVua25vd24iXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiBjb25kaXRpb24gaW4gQ2FtZWxDYXNlIG9yIGluIGZvby5leGFtcGxlLmNvbS9DYW1lbENhc2UuIC0tLSBNYW55IC5jb25kaXRpb24udHlwZSB2YWx1ZXMgYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHJlc291cmNlcyBsaWtlIEF2YWlsYWJsZSwgYnV0IGJlY2F1c2UgYXJiaXRyYXJ5IGNvbmRpdGlvbnMgY2FuIGJlIHVzZWZ1bCAoc2VlIC5ub2RlLnN0YXR1cy5jb25kaXRpb25zKSwgdGhlIGFiaWxpdHkgdG8gZGVjb25mbGljdCBpcyBpbXBvcnRhbnQuIFRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibGFzdEF1dG9tYXRpb25SdW5UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdEF1dG9tYXRpb25SdW5UaW1lIHJlY29yZHMgdGhlIGxhc3QgdGltZSB0aGUgY29udHJvbGxlciByYW4gdGhpcyBhdXRvbWF0aW9uIHRocm91Z2ggdG8gY29tcGxldGlvbiAoZXZlbiBpZiBubyB1cGRhdGVzIHdlcmUgbWFkZSkuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0SGFuZGxlZFJlY29uY2lsZUF0Ijp7ImRlc2NyaXB0aW9uIjoiTGFzdEhhbmRsZWRSZWNvbmNpbGVBdCBob2xkcyB0aGUgdmFsdWUgb2YgdGhlIG1vc3QgcmVjZW50IHJlY29uY2lsZSByZXF1ZXN0IHZhbHVlLCBzbyBhIGNoYW5nZSBjYW4gYmUgZGV0ZWN0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UHVzaENvbW1pdCI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQdXNoQ29tbWl0IHJlY29yZHMgdGhlIFNIQTEgb2YgdGhlIGxhc3QgY29tbWl0IG1hZGUgYnkgdGhlIGNvbnRyb2xsZXIsIGZvciB0aGlzIGF1dG9tYXRpb24gb2JqZWN0IiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UHVzaFRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0UHVzaFRpbWUgcmVjb3JkcyB0aGUgdGltZSBvZiB0aGUgbGFzdCBwdXNoZWQgY2hhbmdlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5sYXN0QXV0b21hdGlvblJ1blRpbWUiLCJuYW1lIjoiTGFzdCBydW4iLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2VVcGRhdGVBdXRvbWF0aW9uIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBpbWFnZXVwZGF0ZWF1dG9tYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2VVcGRhdGVBdXRvbWF0aW9uU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEltYWdlVXBkYXRlQXV0b21hdGlvbiIsInByb3BlcnRpZXMiOnsiZ2l0Ijp7ImRlc2NyaXB0aW9uIjoiR2l0U3BlYyBjb250YWlucyBhbGwgdGhlIGdpdC1zcGVjaWZpYyBkZWZpbml0aW9ucy4gVGhpcyBpcyB0ZWNobmljYWxseSBvcHRpb25hbCwgYnV0IGluIHByYWN0aWNlIG1hbmRhdG9yeSB1bnRpbCB0aGVyZSBhcmUgb3RoZXIga2luZHMgb2Ygc291cmNlIGFsbG93ZWQuIiwicHJvcGVydGllcyI6eyJjaGVja291dCI6eyJkZXNjcmlwdGlvbiI6IkNoZWNrb3V0IGdpdmVzIHRoZSBwYXJhbWV0ZXJzIGZvciBjbG9uaW5nIHRoZSBnaXQgcmVwb3NpdG9yeSwgcmVhZHkgdG8gbWFrZSBjaGFuZ2VzLiBJZiBub3QgcHJlc2VudCwgdGhlIGBzcGVjLnJlZmAgZmllbGQgZnJvbSB0aGUgcmVmZXJlbmNlZCBgR2l0UmVwb3NpdG9yeWAgb3IgaXRzIGRlZmF1bHQgd2lsbCBiZSB1c2VkLiIsInByb3BlcnRpZXMiOnsicmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIGdpdmVzIGEgYnJhbmNoLCB0YWcgb3IgY29tbWl0IHRvIGNsb25lIGZyb20gdGhlIEdpdCByZXBvc2l0b3J5LiIsInByb3BlcnRpZXMiOnsiYnJhbmNoIjp7ImRlZmF1bHQiOiJtYXN0ZXIiLCJkZXNjcmlwdGlvbiI6IlRoZSBHaXQgYnJhbmNoIHRvIGNoZWNrb3V0LCBkZWZhdWx0cyB0byBtYXN0ZXIuIiwidHlwZSI6InN0cmluZyJ9LCJjb21taXQiOnsiZGVzY3JpcHRpb24iOiJUaGUgR2l0IGNvbW1pdCBTSEEgdG8gY2hlY2tvdXQsIGlmIHNwZWNpZmllZCBUYWcgZmlsdGVycyB3aWxsIGJlIGlnbm9yZWQuIiwidHlwZSI6InN0cmluZyJ9LCJzZW12ZXIiOnsiZGVzY3JpcHRpb24iOiJUaGUgR2l0IHRhZyBzZW12ZXIgZXhwcmVzc2lvbiwgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIFRhZy4iLCJ0eXBlIjoic3RyaW5nIn0sInRhZyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBHaXQgdGFnIHRvIGNoZWNrb3V0LCB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgQnJhbmNoLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInJlZiJdLCJ0eXBlIjoib2JqZWN0In0sImNvbW1pdCI6eyJkZXNjcmlwdGlvbiI6IkNvbW1pdCBzcGVjaWZpZXMgaG93IHRvIGNvbW1pdCB0byB0aGUgZ2l0IHJlcG9zaXRvcnkuIiwicHJvcGVydGllcyI6eyJhdXRob3IiOnsiZGVzY3JpcHRpb24iOiJBdXRob3IgZ2l2ZXMgdGhlIGVtYWlsIGFuZCBvcHRpb25hbGx5IHRoZSBuYW1lIHRvIHVzZSBhcyB0aGUgYXV0aG9yIG9mIGNvbW1pdHMuIiwicHJvcGVydGllcyI6eyJlbWFpbCI6eyJkZXNjcmlwdGlvbiI6IkVtYWlsIGdpdmVzIHRoZSBlbWFpbCB0byBwcm92aWRlIHdoZW4gbWFraW5nIGEgY29tbWl0LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgZ2l2ZXMgdGhlIG5hbWUgdG8gcHJvdmlkZSB3aGVuIG1ha2luZyBhIGNvbW1pdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbWFpbCJdLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2VUZW1wbGF0ZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2VUZW1wbGF0ZSBwcm92aWRlcyBhIHRlbXBsYXRlIGZvciB0aGUgY29tbWl0IG1lc3NhZ2UsIGludG8gd2hpY2ggd2lsbCBiZSBpbnRlcnBvbGF0ZWQgdGhlIGRldGFpbHMgb2YgdGhlIGNoYW5nZSBtYWRlLiIsInR5cGUiOiJzdHJpbmcifSwic2lnbmluZ0tleSI6eyJkZXNjcmlwdGlvbiI6IlNpZ25pbmdLZXkgcHJvdmlkZXMgdGhlIG9wdGlvbiB0byBzaWduIGNvbW1pdHMgd2l0aCBhIEdQRyBrZXkiLCJwcm9wZXJ0aWVzIjp7InNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlNlY3JldFJlZiBob2xkcyB0aGUgbmFtZSB0byBhIHNlY3JldCB0aGF0IGNvbnRhaW5zIGEgJ2dpdC5hc2MnIGtleSBjb3JyZXNwb25kaW5nIHRvIHRoZSBBU0NJSSBBcm1vcmVkIGZpbGUgY29udGFpbmluZyB0aGUgR1BHIHNpZ25pbmcga2V5cGFpciBhcyB0aGUgdmFsdWUuIEl0IG11c3QgYmUgaW4gdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHRoZSBJbWFnZVVwZGF0ZUF1dG9tYXRpb24uIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImF1dGhvciJdLCJ0eXBlIjoib2JqZWN0In0sInB1c2giOnsiZGVzY3JpcHRpb24iOiJQdXNoIHNwZWNpZmllcyBob3cgYW5kIHdoZXJlIHRvIHB1c2ggY29tbWl0cyBtYWRlIGJ5IHRoZSBhdXRvbWF0aW9uLiBJZiBtaXNzaW5nLCBjb21taXRzIGFyZSBwdXNoZWQgKGJhY2spIHRvIGAuc3BlYy5jaGVja291dC5icmFuY2hgIG9yIGl0cyBkZWZhdWx0LiIsInByb3BlcnRpZXMiOnsiYnJhbmNoIjp7ImRlc2NyaXB0aW9uIjoiQnJhbmNoIHNwZWNpZmllcyB0aGF0IGNvbW1pdHMgc2hvdWxkIGJlIHB1c2hlZCB0byB0aGUgYnJhbmNoIG5hbWVkLiBUaGUgYnJhbmNoIGlzIGNyZWF0ZWQgdXNpbmcgYC5zcGVjLmNoZWNrb3V0LmJyYW5jaGAgYXMgdGhlIHN0YXJ0aW5nIHBvaW50LCBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3QuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYnJhbmNoIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNvbW1pdCJdLCJ0eXBlIjoib2JqZWN0In0sImludGVydmFsIjp7ImRlc2NyaXB0aW9uIjoiSW50ZXJ2YWwgZ2l2ZXMgYW4gbG93ZXIgYm91bmQgZm9yIGhvdyBvZnRlbiB0aGUgYXV0b21hdGlvbiBydW4gc2hvdWxkIGJlIGF0dGVtcHRlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInNvdXJjZVJlZiI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZVJlZiByZWZlcnMgdG8gdGhlIHJlc291cmNlIGdpdmluZyBhY2Nlc3MgZGV0YWlscyB0byBhIGdpdCByZXBvc2l0b3J5LiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSSB2ZXJzaW9uIG9mIHRoZSByZWZlcmVudCIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZWZhdWx0IjoiR2l0UmVwb3NpdG9yeSIsImRlc2NyaXB0aW9uIjoiS2luZCBvZiB0aGUgcmVmZXJlbnQiLCJlbnVtIjpbIkdpdFJlcG9zaXRvcnkiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN1c3BlbmQiOnsiZGVzY3JpcHRpb24iOiJTdXNwZW5kIHRlbGxzIHRoZSBjb250cm9sbGVyIHRvIG5vdCBydW4gdGhpcyBhdXRvbWF0aW9uLCB1bnRpbCBpdCBpcyB1bnNldCAob3Igc2V0IHRvIGZhbHNlKS4gRGVmYXVsdHMgdG8gZmFsc2UuIiwidHlwZSI6ImJvb2xlYW4ifSwidXBkYXRlIjp7ImRlZmF1bHQiOnsic3RyYXRlZ3kiOiJTZXR0ZXJzIn0sImRlc2NyaXB0aW9uIjoiVXBkYXRlIGdpdmVzIHRoZSBzcGVjaWZpY2F0aW9uIGZvciBob3cgdG8gdXBkYXRlIHRoZSBmaWxlcyBpbiB0aGUgcmVwb3NpdG9yeS4gVGhpcyBjYW4gYmUgbGVmdCBlbXB0eSwgdG8gdXNlIHRoZSBkZWZhdWx0IHZhbHVlLiIsInByb3BlcnRpZXMiOnsicGF0aCI6eyJkZXNjcmlwdGlvbiI6IlBhdGggdG8gdGhlIGRpcmVjdG9yeSBjb250YWluaW5nIHRoZSBtYW5pZmVzdHMgdG8gYmUgdXBkYXRlZC4gRGVmYXVsdHMgdG8gJ05vbmUnLCB3aGljaCB0cmFuc2xhdGVzIHRvIHRoZSByb290IHBhdGggb2YgdGhlIEdpdFJlcG9zaXRvcnlSZWYuIiwidHlwZSI6InN0cmluZyJ9LCJzdHJhdGVneSI6eyJkZWZhdWx0IjoiU2V0dGVycyIsImRlc2NyaXB0aW9uIjoiU3RyYXRlZ3kgbmFtZXMgdGhlIHN0cmF0ZWd5IHRvIGJlIHVzZWQuIiwiZW51bSI6WyJTZXR0ZXJzIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0cmF0ZWd5Il0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImludGVydmFsIiwic291cmNlUmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2VVcGRhdGVBdXRvbWF0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEltYWdlVXBkYXRlQXV0b21hdGlvbiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiAtLS0gVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsIHR5cGUgRm9vU3RhdHVzIHN0cnVjdHsgICAgIC8vIFJlcHJlc2VudHMgdGhlIG9ic2VydmF0aW9ucyBvZiBhIGZvbydzIGN1cnJlbnQgc3RhdGUuICAgICAvLyBLbm93biAuc3RhdHVzLmNvbmRpdGlvbnMudHlwZSBhcmU6IFwiQXZhaWxhYmxlXCIsIFwiUHJvZ3Jlc3NpbmdcIiwgYW5kIFwiRGVncmFkZWRcIiAgICAgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZSAgICAgLy8gK3BhdGNoU3RyYXRlZ3k9bWVyZ2UgICAgIC8vICtsaXN0VHlwZT1tYXAgICAgIC8vICtsaXN0TWFwS2V5PXR5cGUgICAgIENvbmRpdGlvbnMgW11tZXRhdjEuQ29uZGl0aW9uIGBqc29uOlwiY29uZGl0aW9ucyxvbWl0ZW1wdHlcIiBwYXRjaFN0cmF0ZWd5OlwibWVyZ2VcIiBwYXRjaE1lcmdlS2V5OlwidHlwZVwiIHByb3RvYnVmOlwiYnl0ZXMsMSxyZXAsbmFtZT1jb25kaXRpb25zXCJgIFxuICAgICAvLyBvdGhlciBmaWVsZHMgfSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIFRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi4gVGhpcyBtYXkgYmUgYW4gZW1wdHkgc3RyaW5nLiIsIm1heExlbmd0aCI6MzI3NjgsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRHZW5lcmF0aW9uIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXMgc2V0IGJhc2VkIHVwb24uIEZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiBQcm9kdWNlcnMgb2Ygc3BlY2lmaWMgY29uZGl0aW9uIHR5cGVzIG1heSBkZWZpbmUgZXhwZWN0ZWQgdmFsdWVzIGFuZCBtZWFuaW5ncyBmb3IgdGhpcyBmaWVsZCwgYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLiBUaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy4gVGhpcyBmaWVsZCBtYXkgbm90IGJlIGVtcHR5LiIsIm1heExlbmd0aCI6MTAyNCwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXltBLVphLXpdKFtBLVphLXowLTlfLDpdKltBLVphLXowLTlfXSk/JCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJlbnVtIjpbIlRydWUiLCJGYWxzZSIsIlVua25vd24iXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiBjb25kaXRpb24gaW4gQ2FtZWxDYXNlIG9yIGluIGZvby5leGFtcGxlLmNvbS9DYW1lbENhc2UuIC0tLSBNYW55IC5jb25kaXRpb24udHlwZSB2YWx1ZXMgYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHJlc291cmNlcyBsaWtlIEF2YWlsYWJsZSwgYnV0IGJlY2F1c2UgYXJiaXRyYXJ5IGNvbmRpdGlvbnMgY2FuIGJlIHVzZWZ1bCAoc2VlIC5ub2RlLnN0YXR1cy5jb25kaXRpb25zKSwgdGhlIGFiaWxpdHkgdG8gZGVjb25mbGljdCBpcyBpbXBvcnRhbnQuIFRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibGFzdEF1dG9tYXRpb25SdW5UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdEF1dG9tYXRpb25SdW5UaW1lIHJlY29yZHMgdGhlIGxhc3QgdGltZSB0aGUgY29udHJvbGxlciByYW4gdGhpcyBhdXRvbWF0aW9uIHRocm91Z2ggdG8gY29tcGxldGlvbiAoZXZlbiBpZiBubyB1cGRhdGVzIHdlcmUgbWFkZSkuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0SGFuZGxlZFJlY29uY2lsZUF0Ijp7ImRlc2NyaXB0aW9uIjoiTGFzdEhhbmRsZWRSZWNvbmNpbGVBdCBob2xkcyB0aGUgdmFsdWUgb2YgdGhlIG1vc3QgcmVjZW50IHJlY29uY2lsZSByZXF1ZXN0IHZhbHVlLCBzbyBhIGNoYW5nZSBjYW4gYmUgZGV0ZWN0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UHVzaENvbW1pdCI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQdXNoQ29tbWl0IHJlY29yZHMgdGhlIFNIQTEgb2YgdGhlIGxhc3QgY29tbWl0IG1hZGUgYnkgdGhlIGNvbnRyb2xsZXIsIGZvciB0aGlzIGF1dG9tYXRpb24gb2JqZWN0IiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UHVzaFRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0UHVzaFRpbWUgcmVjb3JkcyB0aGUgdGltZSBvZiB0aGUgbGFzdCBwdXNoZWQgY2hhbmdlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5sYXN0QXV0b21hdGlvblJ1blRpbWUiLCJuYW1lIjoiTGFzdCBydW4iLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFiZXRhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJJbWFnZVVwZGF0ZUF1dG9tYXRpb24gaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGltYWdldXBkYXRlYXV0b21hdGlvbnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJJbWFnZVVwZGF0ZUF1dG9tYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSW1hZ2VVcGRhdGVBdXRvbWF0aW9uIiwicHJvcGVydGllcyI6eyJnaXQiOnsiZGVzY3JpcHRpb24iOiJHaXRTcGVjIGNvbnRhaW5zIGFsbCB0aGUgZ2l0LXNwZWNpZmljIGRlZmluaXRpb25zLiBUaGlzIGlzIHRlY2huaWNhbGx5IG9wdGlvbmFsLCBidXQgaW4gcHJhY3RpY2UgbWFuZGF0b3J5IHVudGlsIHRoZXJlIGFyZSBvdGhlciBraW5kcyBvZiBzb3VyY2UgYWxsb3dlZC4iLCJwcm9wZXJ0aWVzIjp7ImNoZWNrb3V0Ijp7ImRlc2NyaXB0aW9uIjoiQ2hlY2tvdXQgZ2l2ZXMgdGhlIHBhcmFtZXRlcnMgZm9yIGNsb25pbmcgdGhlIGdpdCByZXBvc2l0b3J5LCByZWFkeSB0byBtYWtlIGNoYW5nZXMuIElmIG5vdCBwcmVzZW50LCB0aGUgYHNwZWMucmVmYCBmaWVsZCBmcm9tIHRoZSByZWZlcmVuY2VkIGBHaXRSZXBvc2l0b3J5YCBvciBpdHMgZGVmYXVsdCB3aWxsIGJlIHVzZWQuIiwicHJvcGVydGllcyI6eyJyZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgZ2l2ZXMgYSBicmFuY2gsIHRhZyBvciBjb21taXQgdG8gY2xvbmUgZnJvbSB0aGUgR2l0IHJlcG9zaXRvcnkuIiwicHJvcGVydGllcyI6eyJicmFuY2giOnsiZGVmYXVsdCI6Im1hc3RlciIsImRlc2NyaXB0aW9uIjoiVGhlIEdpdCBicmFuY2ggdG8gY2hlY2tvdXQsIGRlZmF1bHRzIHRvIG1hc3Rlci4iLCJ0eXBlIjoic3RyaW5nIn0sImNvbW1pdCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBHaXQgY29tbWl0IFNIQSB0byBjaGVja291dCwgaWYgc3BlY2lmaWVkIFRhZyBmaWx0ZXJzIHdpbGwgYmUgaWdub3JlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbXZlciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBHaXQgdGFnIHNlbXZlciBleHByZXNzaW9uLCB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgVGFnLiIsInR5cGUiOiJzdHJpbmcifSwidGFnIjp7ImRlc2NyaXB0aW9uIjoiVGhlIEdpdCB0YWcgdG8gY2hlY2tvdXQsIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBCcmFuY2guIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsicmVmIl0sInR5cGUiOiJvYmplY3QifSwiY29tbWl0Ijp7ImRlc2NyaXB0aW9uIjoiQ29tbWl0IHNwZWNpZmllcyBob3cgdG8gY29tbWl0IHRvIHRoZSBnaXQgcmVwb3NpdG9yeS4iLCJwcm9wZXJ0aWVzIjp7ImF1dGhvciI6eyJkZXNjcmlwdGlvbiI6IkF1dGhvciBnaXZlcyB0aGUgZW1haWwgYW5kIG9wdGlvbmFsbHkgdGhlIG5hbWUgdG8gdXNlIGFzIHRoZSBhdXRob3Igb2YgY29tbWl0cy4iLCJwcm9wZXJ0aWVzIjp7ImVtYWlsIjp7ImRlc2NyaXB0aW9uIjoiRW1haWwgZ2l2ZXMgdGhlIGVtYWlsIHRvIHByb3ZpZGUgd2hlbiBtYWtpbmcgYSBjb21taXQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBnaXZlcyB0aGUgbmFtZSB0byBwcm92aWRlIHdoZW4gbWFraW5nIGEgY29tbWl0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImVtYWlsIl0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZVRlbXBsYXRlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZVRlbXBsYXRlIHByb3ZpZGVzIGEgdGVtcGxhdGUgZm9yIHRoZSBjb21taXQgbWVzc2FnZSwgaW50byB3aGljaCB3aWxsIGJlIGludGVycG9sYXRlZCB0aGUgZGV0YWlscyBvZiB0aGUgY2hhbmdlIG1hZGUuIiwidHlwZSI6InN0cmluZyJ9LCJzaWduaW5nS2V5Ijp7ImRlc2NyaXB0aW9uIjoiU2lnbmluZ0tleSBwcm92aWRlcyB0aGUgb3B0aW9uIHRvIHNpZ24gY29tbWl0cyB3aXRoIGEgR1BHIGtleSIsInByb3BlcnRpZXMiOnsic2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VjcmV0UmVmIGhvbGRzIHRoZSBuYW1lIHRvIGEgc2VjcmV0IHRoYXQgY29udGFpbnMgYSAnZ2l0LmFzYycga2V5IGNvcnJlc3BvbmRpbmcgdG8gdGhlIEFTQ0lJIEFybW9yZWQgZmlsZSBjb250YWluaW5nIHRoZSBHUEcgc2lnbmluZyBrZXlwYWlyIGFzIHRoZSB2YWx1ZS4gSXQgbXVzdCBiZSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIEltYWdlVXBkYXRlQXV0b21hdGlvbi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiYXV0aG9yIl0sInR5cGUiOiJvYmplY3QifSwicHVzaCI6eyJkZXNjcmlwdGlvbiI6IlB1c2ggc3BlY2lmaWVzIGhvdyBhbmQgd2hlcmUgdG8gcHVzaCBjb21taXRzIG1hZGUgYnkgdGhlIGF1dG9tYXRpb24uIElmIG1pc3NpbmcsIGNvbW1pdHMgYXJlIHB1c2hlZCAoYmFjaykgdG8gYC5zcGVjLmNoZWNrb3V0LmJyYW5jaGAgb3IgaXRzIGRlZmF1bHQuIiwicHJvcGVydGllcyI6eyJicmFuY2giOnsiZGVzY3JpcHRpb24iOiJCcmFuY2ggc3BlY2lmaWVzIHRoYXQgY29tbWl0cyBzaG91bGQgYmUgcHVzaGVkIHRvIHRoZSBicmFuY2ggbmFtZWQuIFRoZSBicmFuY2ggaXMgY3JlYXRlZCB1c2luZyBgLnNwZWMuY2hlY2tvdXQuYnJhbmNoYCBhcyB0aGUgc3RhcnRpbmcgcG9pbnQsIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJicmFuY2giXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiY29tbWl0Il0sInR5cGUiOiJvYmplY3QifSwiaW50ZXJ2YWwiOnsiZGVzY3JpcHRpb24iOiJJbnRlcnZhbCBnaXZlcyBhbiBsb3dlciBib3VuZCBmb3IgaG93IG9mdGVuIHRoZSBhdXRvbWF0aW9uIHJ1biBzaG91bGQgYmUgYXR0ZW1wdGVkLiIsInR5cGUiOiJzdHJpbmcifSwic291cmNlUmVmIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlUmVmIHJlZmVycyB0byB0aGUgcmVzb3VyY2UgZ2l2aW5nIGFjY2VzcyBkZXRhaWxzIHRvIGEgZ2l0IHJlcG9zaXRvcnkuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJIHZlcnNpb24gb2YgdGhlIHJlZmVyZW50IiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlZmF1bHQiOiJHaXRSZXBvc2l0b3J5IiwiZGVzY3JpcHRpb24iOiJLaW5kIG9mIHRoZSByZWZlcmVudCIsImVudW0iOlsiR2l0UmVwb3NpdG9yeSJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3VzcGVuZCI6eyJkZXNjcmlwdGlvbiI6IlN1c3BlbmQgdGVsbHMgdGhlIGNvbnRyb2xsZXIgdG8gbm90IHJ1biB0aGlzIGF1dG9tYXRpb24sIHVudGlsIGl0IGlzIHVuc2V0IChvciBzZXQgdG8gZmFsc2UpLiBEZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1cGRhdGUiOnsiZGVmYXVsdCI6eyJzdHJhdGVneSI6IlNldHRlcnMifSwiZGVzY3JpcHRpb24iOiJVcGRhdGUgZ2l2ZXMgdGhlIHNwZWNpZmljYXRpb24gZm9yIGhvdyB0byB1cGRhdGUgdGhlIGZpbGVzIGluIHRoZSByZXBvc2l0b3J5LiBUaGlzIGNhbiBiZSBsZWZ0IGVtcHR5LCB0byB1c2UgdGhlIGRlZmF1bHQgdmFsdWUuIiwicHJvcGVydGllcyI6eyJwYXRoIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCB0byB0aGUgZGlyZWN0b3J5IGNvbnRhaW5pbmcgdGhlIG1hbmlmZXN0cyB0byBiZSB1cGRhdGVkLiBEZWZhdWx0cyB0byAnTm9uZScsIHdoaWNoIHRyYW5zbGF0ZXMgdG8gdGhlIHJvb3QgcGF0aCBvZiB0aGUgR2l0UmVwb3NpdG9yeVJlZi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0cmF0ZWd5Ijp7ImRlZmF1bHQiOiJTZXR0ZXJzIiwiZGVzY3JpcHRpb24iOiJTdHJhdGVneSBuYW1lcyB0aGUgc3RyYXRlZ3kgdG8gYmUgdXNlZC4iLCJlbnVtIjpbIlNldHRlcnMiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RyYXRlZ3kiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiaW50ZXJ2YWwiLCJzb3VyY2VSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJJbWFnZVVwZGF0ZUF1dG9tYXRpb25TdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSW1hZ2VVcGRhdGVBdXRvbWF0aW9uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7Iml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIC0tLSBUaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSwgdHlwZSBGb29TdGF0dXMgc3RydWN0eyAgICAgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gICAgIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiICAgICAvLyArcGF0Y2hNZXJnZUtleT10eXBlICAgICAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAgICAgLy8gK2xpc3RUeXBlPW1hcCAgICAgLy8gK2xpc3RNYXBLZXk9dHlwZSAgICAgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gICAgIC8vIG90aGVyIGZpZWxkcyB9IiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4gVGhpcyBzaG91bGQgYmUgd2hlbiB0aGUgdW5kZXJseWluZyBjb25kaXRpb24gY2hhbmdlZC4gIElmIHRoYXQgaXMgbm90IGtub3duLCB0aGVuIHVzaW5nIHRoZSB0aW1lIHdoZW4gdGhlIEFQSSBmaWVsZCBjaGFuZ2VkIGlzIGFjY2VwdGFibGUuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLiBUaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi4gRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgaW5zdGFuY2UuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gY29udGFpbnMgYSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBpbmRpY2F0aW5nIHRoZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIFByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLCBhbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuIFRoZSB2YWx1ZSBzaG91bGQgYmUgYSBDYW1lbENhc2Ugc3RyaW5nLiBUaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4gLS0tIE1hbnkgLmNvbmRpdGlvbi50eXBlIHZhbHVlcyBhcmUgY29uc2lzdGVudCBhY3Jvc3MgcmVzb3VyY2VzIGxpa2UgQXZhaWxhYmxlLCBidXQgYmVjYXVzZSBhcmJpdHJhcnkgY29uZGl0aW9ucyBjYW4gYmUgdXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC4gVGhlIHJlZ2V4IGl0IG1hdGNoZXMgaXMgKGRuczExMjNTdWJkb21haW5GbXQvKT8ocXVhbGlmaWVkTmFtZUZtdCkiLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJsYXN0QXV0b21hdGlvblJ1blRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0QXV0b21hdGlvblJ1blRpbWUgcmVjb3JkcyB0aGUgbGFzdCB0aW1lIHRoZSBjb250cm9sbGVyIHJhbiB0aGlzIGF1dG9tYXRpb24gdGhyb3VnaCB0byBjb21wbGV0aW9uIChldmVuIGlmIG5vIHVwZGF0ZXMgd2VyZSBtYWRlKS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RIYW5kbGVkUmVjb25jaWxlQXQiOnsiZGVzY3JpcHRpb24iOiJMYXN0SGFuZGxlZFJlY29uY2lsZUF0IGhvbGRzIHRoZSB2YWx1ZSBvZiB0aGUgbW9zdCByZWNlbnQgcmVjb25jaWxlIHJlcXVlc3QgdmFsdWUsIHNvIGEgY2hhbmdlIGNhbiBiZSBkZXRlY3RlZC4iLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RQdXNoQ29tbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGFzdFB1c2hDb21taXQgcmVjb3JkcyB0aGUgU0hBMSBvZiB0aGUgbGFzdCBjb21taXQgbWFkZSBieSB0aGUgY29udHJvbGxlciwgZm9yIHRoaXMgYXV0b21hdGlvbiBvYmplY3QiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RQdXNoVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQdXNoVGltZSByZWNvcmRzIHRoZSB0aW1lIG9mIHRoZSBsYXN0IHB1c2hlZCBjaGFuZ2UuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoia3VzdG9taXplLWNvbnRyb2xsZXIifX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6ImZsdXgtc3lzdGVtIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImZsdXgiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4xNi4xIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXIifSwibmFtZSI6Im5vdGlmaWNhdGlvbi1jb250cm9sbGVyIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwIiwicG9ydCI6ODAsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHAifV0sInNlbGVjdG9yIjp7ImFwcCI6Im5vdGlmaWNhdGlvbi1jb250cm9sbGVyIn0sInR5cGUiOiJDbHVzdGVySVAifX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoibm90aWZpY2F0aW9uLWNvbnRyb2xsZXIifX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjUuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiZmx1eC1zeXN0ZW0iLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoiZmx1eCIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjE2LjEifSwibmFtZSI6InByb3ZpZGVycy5ub3RpZmljYXRpb24udG9vbGtpdC5mbHV4Y2QuaW8ifSwic3BlYyI6eyJncm91cCI6Im5vdGlmaWNhdGlvbi50b29sa2l0LmZsdXhjZC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQcm92aWRlciIsImxpc3RLaW5kIjoiUHJvdmlkZXJMaXN0IiwicGx1cmFsIjoicHJvdmlkZXJzIiwic2luZ3VsYXIiOiJwcm92aWRlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09XCJSZWFkeVwiKV0uc3RhdHVzIiwibmFtZSI6IlJlYWR5IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmNvbmRpdGlvbnNbPyhALnR5cGU9PVwiUmVhZHlcIildLm1lc3NhZ2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWJldGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb3ZpZGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBwcm92aWRlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQcm92aWRlclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQcm92aWRlciIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IkhUVFAvUyB3ZWJob29rIGFkZHJlc3Mgb2YgdGhpcyBwcm92aWRlciIsInBhdHRlcm4iOiJeKGh0dHB8aHR0cHMpOi8vIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQ2VydFNlY3JldFJlZiBjYW4gYmUgZ2l2ZW4gdGhlIG5hbWUgb2YgYSBzZWNyZXQgY29udGFpbmluZyBhIFBFTS1lbmNvZGVkIENBIGNlcnRpZmljYXRlIChgY2FGaWxlYCkiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJjaGFubmVsIjp7ImRlc2NyaXB0aW9uIjoiQWxlcnQgY2hhbm5lbCBmb3IgdGhpcyBwcm92aWRlciIsInR5cGUiOiJzdHJpbmcifSwicHJveHkiOnsiZGVzY3JpcHRpb24iOiJIVFRQL1MgYWRkcmVzcyBvZiB0aGUgcHJveHkiLCJwYXR0ZXJuIjoiXihodHRwfGh0dHBzKTovLyIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VjcmV0IHJlZmVyZW5jZSBjb250YWluaW5nIHRoZSBwcm92aWRlciB3ZWJob29rIFVSTCB1c2luZyBcImFkZHJlc3NcIiBhcyBkYXRhIGtleSIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50IiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHByb3ZpZGVyIiwiZW51bSI6WyJzbGFjayIsImRpc2NvcmQiLCJtc3RlYW1zIiwicm9ja2V0IiwiZ2VuZXJpYyIsImdpdGh1YiIsImdpdGxhYiIsImJpdGJ1Y2tldCIsImF6dXJlZGV2b3BzIiwiZ29vZ2xlY2hhdCIsIndlYmV4Iiwic2VudHJ5IiwiYXp1cmVldmVudGh1YiJdLCJ0eXBlIjoic3RyaW5nIn0sInVzZXJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiQm90IHVzZXJuYW1lIGZvciB0aGlzIHByb3ZpZGVyIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb3ZpZGVyU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFByb3ZpZGVyIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7Iml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIC0tLSBUaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSwgdHlwZSBGb29TdGF0dXMgc3RydWN0eyAgICAgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gICAgIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiICAgICAvLyArcGF0Y2hNZXJnZUtleT10eXBlICAgICAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAgICAgLy8gK2xpc3RUeXBlPW1hcCAgICAgLy8gK2xpc3RNYXBLZXk9dHlwZSAgICAgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gICAgIC8vIG90aGVyIGZpZWxkcyB9IiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4gVGhpcyBzaG91bGQgYmUgd2hlbiB0aGUgdW5kZXJseWluZyBjb25kaXRpb24gY2hhbmdlZC4gIElmIHRoYXQgaXMgbm90IGtub3duLCB0aGVuIHVzaW5nIHRoZSB0aW1lIHdoZW4gdGhlIEFQSSBmaWVsZCBjaGFuZ2VkIGlzIGFjY2VwdGFibGUuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLiBUaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi4gRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgaW5zdGFuY2UuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gY29udGFpbnMgYSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBpbmRpY2F0aW5nIHRoZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIFByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLCBhbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuIFRoZSB2YWx1ZSBzaG91bGQgYmUgYSBDYW1lbENhc2Ugc3RyaW5nLiBUaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4gLS0tIE1hbnkgLmNvbmRpdGlvbi50eXBlIHZhbHVlcyBhcmUgY29uc2lzdGVudCBhY3Jvc3MgcmVzb3VyY2VzIGxpa2UgQXZhaWxhYmxlLCBidXQgYmVjYXVzZSBhcmJpdHJhcnkgY29uZGl0aW9ucyBjYW4gYmUgdXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC4gVGhlIHJlZ2V4IGl0IG1hdGNoZXMgaXMgKGRuczExMjNTdWJkb21haW5GbXQvKT8ocXVhbGlmaWVkTmFtZUZtdCkiLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6ImZsdXgtc3lzdGVtIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImZsdXgiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4xNi4xIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXIifSwibmFtZSI6InNvdXJjZS1jb250cm9sbGVyIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwIiwicG9ydCI6ODAsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHAifV0sInNlbGVjdG9yIjp7ImFwcCI6InNvdXJjZS1jb250cm9sbGVyIn0sInR5cGUiOiJDbHVzdGVySVAifX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJmbHV4LXN5c3RlbSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmbHV4IiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMTYuMSJ9LCJuYW1lIjoic291cmNlLWNvbnRyb2xsZXIifX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6ImZsdXgtc3lzdGVtIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImZsdXgiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4xNi4xIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXIifSwibmFtZSI6IndlYmhvb2stcmVjZWl2ZXIifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHAiLCJwb3J0Ijo4MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cC13ZWJob29rIn1dLCJzZWxlY3RvciI6eyJhcHAiOiJub3RpZmljYXRpb24tY29udHJvbGxlciJ9LCJ0eXBlIjoiQ2x1c3RlcklQIn19
relatedImages:
- image: ghcr.io/fluxcd/helm-controller:v0.11.1
  name: ""
- image: ghcr.io/fluxcd/image-automation-controller:v0.14.0
  name: ""
- image: ghcr.io/fluxcd/image-reflector-controller:v0.11.0
  name: ""
- image: ghcr.io/fluxcd/kustomize-controller:v0.13.2
  name: ""
- image: ghcr.io/fluxcd/notification-controller:v0.15.0
  name: ""
- image: ghcr.io/fluxcd/source-controller:v0.15.3
  name: ""
- image: quay.io/openshifttest/flux-operator-bundle:latest
  name: ""
schema: olm.bundle
---
schema: olm.channel
package: flux-operator
name: stable
entries:
  - name: flux.v0.16.1
